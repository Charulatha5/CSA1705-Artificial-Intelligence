import itertools

def solve_cryptarithmetic(puzzle):
    # Extract unique letters from the puzzle
    words = puzzle.split()
    letters = set(char for word in words for char in word)
    if len(letters) > 10:
        return None  # More than 10 unique letters, no valid solution

    # Generate all possible digit combinations
    for digits in itertools.permutations(range(10), len(letters)):
        # Map letters to digits
        mapping = dict(zip(letters, digits))
        # Check if the mapping satisfies the puzzle
        if all(sum(mapping[char] * 10 ** (len(word) - idx - 1) for idx, char in enumerate(word)) != 0 for word in words):
            return mapping

# Example puzzle
puzzle = "SEND + MORE == MONEY"

# Solve the puzzle
solution = solve_cryptarithmetic(puzzle)

# Print the solution
if solution:
    print("Solution found:")
    for word in puzzle.split():
        print(word.translate(str.maketrans(solution)))
else:
    print("No solution found.")
